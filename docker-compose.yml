services:
  cloudflared:
    container_name: cloudflared
    image: cloudflare/cloudflared:latest
    restart: unless-stopped
    command: 'proxy-dns --address 0.0.0.0 --port 5053 --upstream https://dns.cloudflare.com/dns-query --upstream https://dns.google/dns-query'
    networks:
      - dns_network
    
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    restart: unless-stopped
    ports:
      # DNS Ports (handled by dnsmasq)
      - "53:53/tcp"
      - "53:53/udp"
      # Default HTTP Port
      - "80:80/tcp"
      # Default HTTPS Port. FTL will generate a self-signed certificate
      - "443:443/tcp"
      # Uncomment the line below if you want Pi-hole as your DHCP server
      #- "67:67/udp"
    environment:
      # Set your timezone
      TZ: ${TIMEZONE:-America/New_York}
      # Web interface password
      FTLCONF_webserver_api_password: ${PIHOLE_WEBPASSWORD:-admin}
      # Configure Pi-hole to use cloudflared for DNS
      FTLCONF_dns_upstreams: cloudflared#5053
      # FTLCONF_dns_upstreams: 1.1.1.1#53
      # Listen on all interfaces
      FTLCONF_dns_listeningMode: all
      # Enable DNSSEC
      FTLCONF_dns_dnssec: true
      # Disable bogus private reverse lookups
      # FTLCONF_dns_bogusPriv: false
      # Other DNS settings (add to .env.example)
      # FTLCONF_dns_piholePTR: "HOSTNAME"
      FTLCONF_dns_domainNeeded: false
      FTLCONF_dns_domain: "localdomain"
      # Increase rate limiting
      # FTLCONF_dns_rateLimit_count: 10000
      # FTLCONF_dns_rateLimit_interval: 60
      # 0x20 encoding not supported by cloudflared at the moment
      FTLCONF_misc_dnsmasq_lines: "no-0x20-encode"
      # Enable conditional forwarding
      FTLCONF_dns_revServers: ${REVERSE_SERVERS:-}

    volumes:
      # For persisting Pi-hole's databases and configuration
      - './container_data/pihole/etc-pihole:/etc/pihole'
    depends_on:
      - cloudflared
    networks:
      - dns_network
    cap_add:
      # Required if you are using Pi-hole as your DHCP server
      - NET_ADMIN
      # Optional, gives Pi-hole more processing priority
      - SYS_NICE
      - SYS_TIME

  dnsmasq:
    container_name: dnsmasq
    image: andyshinn/dnsmasq:latest
    restart: unless-stopped
    ports:
      - "4153:53/udp"  # Host:4153 -> Container:53
      - "4153:53/tcp"
    entrypoint: ["/bin/sh", "-c", "echo -e '# Forward to Pi-hole first\nserver=pihole\n# Fallback to Cloudflare and Google if Pi-hole chain fails\nserver=1.1.1.1\nserver=8.8.8.8\n# Use servers in order, only fall back if upstream fails\nstrict-order\n# Donâ€™t resolve locally, just forward\nno-resolv\n# Listen on all interfaces in the container\nlisten-address=0.0.0.0' > /etc/dnsmasq.conf && dnsmasq -k"]
    depends_on:
      - pihole
    networks:
      - dns_network

networks:
  dns_network:
    driver: bridge