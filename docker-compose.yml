services:
  cloudflared:
    container_name: cloudflared
    image: cloudflare/cloudflared:latest
    restart: unless-stopped
    command: 'proxy-dns --address 0.0.0.0 --port 5053 --upstream https://dns.cloudflare.com/dns-query --upstream https://dns.google/dns-query'
    networks:
      - dns_network
    
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    restart: unless-stopped
    ports:
      # DNS Ports
      - "53:53/tcp"
      - "53:53/udp"
      # Default HTTP Port
      - "80:80/tcp"
      # Default HTTPS Port. FTL will generate a self-signed certificate
      - "443:443/tcp"
      # Uncomment the line below if you want Pi-hole as your DHCP server
      #- "67:67/udp"
    environment:
      # Set your timezone
      TZ: ${TIMEZONE:-America/New_York}
      # Web interface password
      FTLCONF_webserver_api_password: ${PIHOLE_WEBPASSWORD:-admin}
      # Configure Pi-hole to use cloudflared for DNS
      FTLCONF_dns_upstreams: cloudflared#5053
      # FTLCONF_dns_upstreams: 1.1.1.1#53
      # Listen on all interfaces
      FTLCONF_dns_listeningMode: all
      # Enable DNSSEC
      FTLCONF_dns_dnssec: true
      # Disable bogus private reverse lookups
      FTLCONF_dns_bogusPriv: true
      # Increase rate limiting
      FTLCONF_dns_rateLimit_count: 1000000
      FTLCONF_dns_rateLimit_interval: 10
      # 0x20 encoding not supported by cloudfalred at the moment
      FTLCONF_misc_dnsmasq_lines: "no-0x20-encode"
      # Enable conditional forwarding
      FTLCONF_dns_revServers: ${REVERSE_SERVERS:-}

    volumes:
      # For persisting Pi-hole's databases and configuration
      - './container_data/pihole/etc-pihole:/etc/pihole'
    depends_on:
      - cloudflared
    networks:
      - dns_network
    cap_add:
      # Required if you are using Pi-hole as your DHCP server
      - NET_ADMIN
      # Optional, gives Pi-hole more processing priority
      - SYS_NICE
      - SYS_TIME

networks:
  dns_network:
    driver: bridge