services:
  cloudflared:
    container_name: cloudflared
    image: cloudflare/cloudflared:latest
    restart: unless-stopped
    command: 'proxy-dns --port 5053 --upstream https://dns.cloudflare.com/dns-query --upstream https://dns.google/dns-query'
    networks:
      - dns_network
    healthcheck:
      test: ["CMD", "wget", "-O", "/dev/null", "http://localhost:5053"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    
  pihole:
    container_name: pihole
    image: pihole/pihole:${PIHOLE_VERSION:-latest}
    restart: unless-stopped
    ports:
      - "80:80/tcp"  # Web interface for Pi-hole admin
    environment:
      - TZ=${TIMEZONE:-America/New_York}
      - FTLCONF_webserver_api_password=${PIHOLE_WEBPASSWORD:-admin}
      - FTLCONF_dns_upstreams=cloudflared#5053
      - FTLCONF_dns_listeningMode=all
      - FTLCONF_dns_bogus_priv=true
      - FTLCONF_dns_dnssec=true
      - FTLCONF_webserver_query_logging=true
      - FTLCONF_gui_theme=${WEB_THEME:-default-dark}
      - FTLCONF_LOCAL_IPV4=${SERVER_IP:-}
    volumes:
      - /container_data/pihole/etc-pihole:/etc/pihole
      # v6 note: only enable this if you're migrating from v5 or need custom configs
      # - /container_data/pihole/etc-dnsmasq.d:/etc/dnsmasq.d
    depends_on:
      - cloudflared
    networks:
      - dns_network
    cap_add:
      - NET_ADMIN  # Required for DHCP
      - SYS_NICE   # Gives Pi-hole more processing priority
    healthcheck:
      test: ["CMD", "dig", "@127.0.0.1", "google.com"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
      
  unbound:
    container_name: unbound
    image: mvance/unbound:latest
    restart: unless-stopped
    ports:
      - "${DNS_PORT:-53}:53/tcp"
      - "${DNS_PORT:-53}:53/udp"
    volumes:
      - /container_data/unbound/etc:/opt/unbound/etc/unbound
    networks:
      - dns_network
    healthcheck:
      test: ["CMD", "dig", "@127.0.0.1", "google.com"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    command: |
      sh -c '
      cat > /opt/unbound/etc/unbound/unbound.conf << EOF
      server:
        verbosity: 1
        interface: 0.0.0.0
        port: 53
        do-ip4: yes
        do-ip6: yes
        do-udp: yes
        do-tcp: yes
        access-control: 0.0.0.0/0 allow
        
        # Use the pihole as primary, with fallback
        forward-zone:
          name: "."
          forward-addr: pihole@53
          forward-addr: ${FALLBACK_DNS:-1.1.1.1}
      EOF
      
      # Start unbound
      unbound -d -c /opt/unbound/etc/unbound/unbound.conf
      '
      
  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    restart: unless-stopped
    environment:
      - TZ=${TIMEZONE:-America/New_York}
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_INCLUDE_STOPPED=false
      - WATCHTOWER_SCHEDULE=${WATCHTOWER_SCHEDULE:-0 0 4 * * 0}
      - WATCHTOWER_NOTIFICATION_URL=${NOTIFICATION_URL:-}
      - WATCHTOWER_NOTIFICATIONS=${ENABLE_NOTIFICATIONS:-disabled}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - dns_network

networks:
  dns_network:
    driver: bridge